# Here are the server and client modules. The server can be used standalone with just $python server.py but the client needs to be called from
# another python script.

# Declaration of a client-process:

# Create pipes to communicate to the client process
pipe_in_client, pipe_out = os.pipe()
pipe_in, pipe_out_client = os.pipe()

# Create a "name" for your client, so that other clients can access you by that name (and not just by addr)

my_client_type = "the_architecture"

# Create a client object to communicate with the server
client = Client(client_type=my_client_type,
                       pipe_in=pipe_in_client,
                       pipe_out=pipe_out_client)

# Start the client-process

client.start()

# Sending messages

# Define the message as a string beginning with the recipient's client_type followed by a ";", and then the message.

my_message = "denmark;danskj\'e4vlar!"

# Encode the string to utf-8 and write it to the pipe defined above.

os.write(self.pipe_out, msg.encode("utf-8"))
sys.stdout.flush()

# Close the client safely, not always necessary

client.close() # Tell it to close

client.join() # Wait for it to close
